//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoFinalDisenio.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    
    public partial class DisenioEntities : DbContext
    {
        public DisenioEntities()
            : base("name=DisenioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Aspecto> Aspecto { get; set; }
        public DbSet<Elemento> Elemento { get; set; }
        public DbSet<EscalaImpacto> EscalaImpacto { get; set; }
        public DbSet<EscalaProbabilidad> EscalaProbabilidad { get; set; }
        public DbSet<EscalaPuntaje> EscalaPuntaje { get; set; }
        public DbSet<Estrategia> Estrategia { get; set; }
        public DbSet<Factor> Factor { get; set; }
        public DbSet<LeccionAprendida> LeccionAprendida { get; set; }
        public DbSet<MatrizRiesgos> MatrizRiesgos { get; set; }
        public DbSet<Permiso> Permiso { get; set; }
        public DbSet<PortafolioProyectos> PortafolioProyectos { get; set; }
        public DbSet<Proyecto> Proyecto { get; set; }
        public DbSet<Riesgo> Riesgo { get; set; }
        public DbSet<Rol> Rol { get; set; }
        public DbSet<TipoRiesgo> TipoRiesgo { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
        public DbSet<Categoria> Categoria { get; set; }
        public DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public DbSet<aspnet_Users> aspnet_Users { get; set; }
        public DbSet<aspnet_Membership> aspnet_Membership { get; set; }
    
        public virtual ObjectResult<Proyecto> indexProyecto(Nullable<int> valorInical)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Proyecto).Assembly);
    
            var valorInicalParameter = valorInical.HasValue ?
                new ObjectParameter("valorInical", valorInical) :
                new ObjectParameter("valorInical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proyecto>("indexProyecto", valorInicalParameter);
        }
    
        public virtual ObjectResult<Proyecto> indexProyecto(Nullable<int> valorInical, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Proyecto).Assembly);
    
            var valorInicalParameter = valorInical.HasValue ?
                new ObjectParameter("valorInical", valorInical) :
                new ObjectParameter("valorInical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proyecto>("indexProyecto", mergeOption, valorInicalParameter);
        }
    
        internal virtual int CalificarRiesgo(Nullable<int> idRiesgo)
        {
            var idRiesgoParameter = idRiesgo.HasValue ?
                new ObjectParameter("idRiesgo", idRiesgo) :
                new ObjectParameter("idRiesgo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalificarRiesgo", idRiesgoParameter);
        }
    
        public virtual int CalificarFactor(Nullable<int> idFactor)
        {
            var idFactorParameter = idFactor.HasValue ?
                new ObjectParameter("idFactor", idFactor) :
                new ObjectParameter("idFactor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalificarFactor", idFactorParameter);
        }
    
        public virtual int CalificarElemento(Nullable<int> idElemento)
        {
            var idElementoParameter = idElemento.HasValue ?
                new ObjectParameter("idElemento", idElemento) :
                new ObjectParameter("idElemento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalificarElemento", idElementoParameter);
        }
    
        public virtual int AsignarNivelRiesgo(Nullable<int> id_Riesgo)
        {
            var id_RiesgoParameter = id_Riesgo.HasValue ?
                new ObjectParameter("id_Riesgo", id_Riesgo) :
                new ObjectParameter("id_Riesgo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsignarNivelRiesgo", id_RiesgoParameter);
        }
    }
}
